
typedef struct student stu;


void menu()
{
    printf("成绩管理系统\n1.信息录入\n2.保存至文件\n3.恢复\n4.插入\n5.删除\n6.百分制转换\n7.打印\n8.查找\n0.Exit\nPlease Input your choice:");
}

int input(stu *p)
{
    int i=0;
    do
    {
        printf("请输入学生的编号、姓名和分数\n");
        scanf("%ld%s%f",&p[i].id,p[i].name,&p[i].score);
        i++;
        printf("是否继续输入？\n");
        getchar();
    }
    while(getchar()=='y'||getchar()=='Y');

    return i;
}

int  save (stu *p,int size)
{
    int i;
    FILE *fq;
    if((fq=fopen("student1,txt","wb"))==NULL)
    {
        printf("打开文件失败！\n");
        return 0;
    }

    for(i=0; i<size; i++)
    {
        fwrite(p+i,sizeof(stu),1,fq);
    }

    fclose(fq);
    return i;

}

int recover(stu *p)
{
    int i=0;
    FILE *fp;
    if((fp=fopen("student1,txt","rb"))==NULL)
    {
        printf("打开文件失败！\n");
        exit(1);
    }
    while(fread(p + i,sizeof(stu),1,fp))
    {
        i++;
    }
    fclose(fp);
    return i;

}

int  inseart(stu *p,int size)
{
    int i=size;
    do
    {
        printf("请输入学生的编号、姓名和分数\n");
        scanf("%ld%s%f",&p[i].id,p[i].name,&p[i].score);
        i++;
        printf("是否继续输入？\n");
        getchar();
    }
    while(getchar()=='y');
    size = i;
    return size;

}

int delete(stu *p,int size)
{
    char  name1[20];
    printf("请输入删除记录的学生姓名\n");
    scanf(" %s",name1);
    int i,flag=1,pos;
    for(i=0; i<size&&flag; i++)
    {
        if(strcmp(p[i].name,name1)==0)
        {
            pos=i;
            flag=0;
        }
    }
    for(i=pos; i<size-1; i++)
    {
        p[i]=p[i+1];
    }
    return size-1;

}

void level_trans(stu *p,int size)
{
    int i;
    int r;
    for(i=0; i<size; i++)
    {
        r=(p[i].score)/10;
        switch(r)
        {
        case 9:
            p[i].level='A';
            break;
        case 8:
            p[i].level='B';
            break;
        case 7:
            p[i].level='C';
            break;
        case 6:
            p[i].level='D';
            break;
        default :
            p[i].level='E';
            break;

        }
    }
}

stu * search(stu *p,int size )
{

    char name2[20];
    stu *s=NULL;
    int i,flag=1;
     printf("请输入要查找学生的姓名\n");
    scanf(" %s",name2);
    for(i=0;i<size&&flag;i++)
    {
        if(strcmp(name2,p[i].name)==0)
        {
            flag=0;
            s=p+i;
        }
    }

    return s;
}

void print(stu *p,int size)
{
    int i;
    for(i=0; i<size; i++)
    {
        printf("%ld    %s   %f   %c\n",p[i].id,p[i].name,p[i].score,p[i].level);
    }
}

int main()
{
    int num=0,choice,flag=0;
    stu stu1[300]= {0};
    stu *s;
    do
    {
        menu();

        scanf(" %d",&choice);
        switch(choice)
        {
        case 1:

            num=input(stu1);
            break;
        case 2:
            flag= save(stu1,num);
            flag?printf("成功写入！\n"):printf("写入记录失败\n");
            break;
        case 3:
            num=recover(stu1);
            num?printf("回复文件成功\n"):printf("回复文件失败\n");
            print(stu1,num);
            break;
        case 4:
            num=inseart(stu1,num);
            break;
        case 5:
            num=delete(stu1,num);
            print(stu1,num);
            break;
        case 6:
            level_trans(stu1,num);
            break;
        case 7:
            print(stu1,num);
            break;
        case 8:
            s= search(stu1 ,num);
            s==NULL?printf("没有找到相关信息！\n"):print(s,1);
            break;
        case 0:
            exit(0);
            break;
        default :
            printf("请在0到8之间选择\n");
            break;
        }
        system("pause");
        system("cls");
    }
    while(choice!=0);

	
	
	}
